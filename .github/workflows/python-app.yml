# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Project ASTRA

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  setup-environment:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Set Environment Secrets
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          echo "FIREBASE_CLIENT=${{ secrets.FIREBASE_CLIENT }}" >> $GITHUB_ENV
          echo "GCP_BUCKET=${{ secrets.GCP_BUCKET }}" >> $GITHUB_ENV
          echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> $GITHUB_ENV
          echo "TRANSLATE_API=${{ secrets.TRANSLATE_API }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV 
          echo "REACT_APP_FIREBASE_DATABASE_URL=${{ secrets.REACT_APP_FIREBASE_DATABASE_URL }}" >> $GITHUB_ENV 
          echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV 
          echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV  
          echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV  
          echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}" >> $GITHUB_ENV 
          echo "REACT_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}" >> $GITHUB_ENV 

  llm-server:
    name: Build LLM Server
    runs-on: ubuntu-latest
    needs: setup-environment
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./llm-server/requirements.txt

      - name: Lint and Test
        run: |
          pylint ./llm-server
          pytest ./llm-server

  streamlit-app:
    name: Build Streamlit App
    runs-on: ubuntu-latest
    needs: setup-environment
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: |
          pip install -r ./streamlit-app/requirements.txt

      - name: Lint and Test
        run: |
          pylint ./streamlit-app

  react-app:
    name: Build React App
    runs-on: ubuntu-latest
    needs: setup-environment
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js Dependencies
        run: |
          npm install --prefix ./react-app
      - name: Build React App
        run: |
          npm run build --prefix ./react-app


